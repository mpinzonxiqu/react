openapi: 3.0.0
info:
  title: API de Películas
  version: 1.0.0
  description: Documentación de la API para la gestión de películas.

servers:
  - url: http://localhost:3000
    description: Servidor local para desarrollo

paths:
  /api/register:
    post:
      summary: Registro de un nuevo usuario
      description: Crea un nuevo usuario con un nombre de usuario y una contraseña.
      tags:
        - Usuarios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "examoooooooooooooser"
                password:
                  type: string
                  example: "examplePassword"
      responses:
        '201':
          description: Usuario registrado con éxito.
        '400':
          description: Error en la solicitud.

  /api/user/{id}:
    get:
      summary: Obtener usuario por ID
      description: Obtiene los detalles de un usuario específico por su ID.
      tags:
        - Usuarios
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 40
          description: ID del usuario
      responses:
        '200':
          description: Detalles del usuario obtenidos con éxito.
        '404':
          description: Usuario no encontrado.

  /api/user/getAllUsers:
    get:
      summary: Obtener todos los usuarios
      description: Obtiene una lista de todos los usuarios registrados.
      tags:
        - Usuarios
      responses:
        '200':
          description: Lista de usuarios obtenida con éxito.
        '500':
          description: Error en el servidor.

  /api/user/updateUser:
    put:
      summary: Actualizar usuario
      description: Actualiza los datos de un usuario específico utilizando su ID.
      tags:
        - Usuarios
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
            example: 34
          description: ID del usuario a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "zzzzzzzzzzzzzzzzz"
                password:
                  type: string
                  example: "examplePassword"
      responses:
        '200':
          description: Usuario actualizado con éxito.
        '400':
          description: Error en los datos proporcionados.
        '404':
          description: Usuario no encontrado.

  /api/user/deleteUser:
    delete:
      summary: Eliminar usuario
      description: Elimina un usuario específico utilizando su ID.
      tags:
        - Usuarios
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
            example: 37
          description: ID del usuario a eliminar
      responses:
        '200':
          description: Usuario eliminado con éxito.
        '404':
          description: Usuario no encontrado.

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password:
          type: string
